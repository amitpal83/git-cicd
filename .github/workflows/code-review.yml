name: Code Review and Quality Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Run Super-Linter
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_JSCPD: false
        
    - name: Code Quality Report
      if: always()
      run: |
        echo "Code quality analysis completed"
        echo "Check the annotations above for any issues found"

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for package files
      id: check-files
      run: |
        if [ -f "package.json" ]; then
          echo "package_json=true" >> $GITHUB_OUTPUT
        fi
        if [ -f "pom.xml" ]; then
          echo "pom_xml=true" >> $GITHUB_OUTPUT
        fi
        if [ -f "requirements.txt" ]; then
          echo "requirements_txt=true" >> $GITHUB_OUTPUT
        fi
        if [ -f "Gemfile" ]; then
          echo "gemfile=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Setup Node.js for npm audit
      if: steps.check-files.outputs.package_json == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Run npm audit
      if: steps.check-files.outputs.package_json == 'true'
      run: |
        npm audit --audit-level=moderate
        
    - name: Setup Java for Maven/Gradle
      if: steps.check-files.outputs.pom_xml == 'true'
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Run Maven dependency check
      if: steps.check-files.outputs.pom_xml == 'true'
      run: |
        if [ -f "pom.xml" ]; then
          mvn dependency:analyze
        fi
        
    - name: Setup Python for pip audit
      if: steps.check-files.outputs.requirements_txt == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Run pip audit
      if: steps.check-files.outputs.requirements_txt == 'true'
      run: |
        pip install safety
        safety check -r requirements.txt

  pr-size-check:
    name: PR Size Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Check PR size
      uses: actions/github-script@v6
      with:
        script: |
          const pr = context.payload.pull_request;
          const additions = pr.additions;
          const deletions = pr.deletions;
          const totalChanges = additions + deletions;
          
          console.log(`PR changes: +${additions} -${deletions} (total: ${totalChanges})`);
          
          if (totalChanges > 500) {
            core.setFailed(`This PR is quite large (${totalChanges} lines changed). Consider breaking it into smaller PRs for easier review.`);
          } else if (totalChanges > 200) {
            console.log(`This PR is moderately large (${totalChanges} lines changed). Please ensure adequate testing and documentation.`);
          } else {
            console.log(`PR size looks good (${totalChanges} lines changed).`);
          }