name: Code Assist and Dependency Management

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  pull_request:
    paths:
      - 'package.json'
      - 'pom.xml'
      - 'requirements.txt'
      - 'Gemfile'
      - 'go.mod'
      - 'Cargo.toml'

jobs:
  dependency-update:
    name: Dependency Update Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js for npm updates
      if: hashFiles('**/package.json') != ''
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Check npm outdated packages
      if: hashFiles('**/package.json') != ''
      run: |
        echo "Checking for outdated npm packages..."
        npm outdated || true
        
    - name: Setup Python for pip updates
      if: hashFiles('**/requirements.txt') != ''
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Check pip outdated packages
      if: hashFiles('**/requirements.txt') != ''
      run: |
        echo "Checking for outdated pip packages..."
        pip install pip-check
        pip-check || true
        
    - name: Setup Java for Maven updates
      if: hashFiles('**/pom.xml') != ''
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Check Maven outdated dependencies
      if: hashFiles('**/pom.xml') != ''
      run: |
        echo "Checking for outdated Maven dependencies..."
        mvn versions:display-dependency-updates || true

  code-formatting:
    name: Code Formatting Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js for Prettier
      if: hashFiles('**/package.json') != ''
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install and run Prettier
      if: hashFiles('**/package.json') != ''
      run: |
        npm install -g prettier
        prettier --check . || echo "Some files need formatting"
        
    - name: Setup Python for Black formatter
      if: hashFiles('**/requirements.txt') != '' || hashFiles('**/*.py') != ''
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Check Python formatting with Black
      if: hashFiles('**/requirements.txt') != '' || hashFiles('**/*.py') != ''
      run: |
        pip install black
        black --check . || echo "Some Python files need formatting"
        
    - name: Setup Java for Google Java Format
      if: hashFiles('**/pom.xml') != '' || hashFiles('**/*.java') != ''
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Check Java formatting
      if: hashFiles('**/pom.xml') != '' || hashFiles('**/*.java') != ''
      run: |
        wget https://github.com/google/google-java-format/releases/download/v1.17.0/google-java-format-1.17.0-all-deps.jar
        find . -name "*.java" -exec java -jar google-java-format-1.17.0-all-deps.jar --dry-run --set-exit-if-changed {} \; || echo "Some Java files need formatting"

  code-documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check README exists
      run: |
        if [ -f "README.md" ]; then
          echo "README.md found"
          wc -l README.md
        else
          echo "WARNING: No README.md found"
        fi
        
    - name: Check for CHANGELOG
      run: |
        if [ -f "CHANGELOG.md" ] || [ -f "CHANGELOG.txt" ] || [ -f "HISTORY.md" ]; then
          echo "Changelog found"
        else
          echo "SUGGESTION: Consider adding a CHANGELOG.md"
        fi
        
    - name: Check for LICENSE
      run: |
        if [ -f "LICENSE" ] || [ -f "LICENSE.md" ] || [ -f "LICENSE.txt" ]; then
          echo "License file found"
        else
          echo "SUGGESTION: Consider adding a LICENSE file"
        fi
        
    - name: Check for CONTRIBUTING guidelines
      run: |
        if [ -f "CONTRIBUTING.md" ] || [ -f ".github/CONTRIBUTING.md" ]; then
          echo "Contributing guidelines found"
        else
          echo "SUGGESTION: Consider adding CONTRIBUTING.md"
        fi

  performance-analysis:
    name: Performance Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Analyze repository size
      run: |
        echo "Repository size analysis:"
        du -sh .
        echo "Largest files:"
        find . -type f -size +1M -exec ls -lh {} \; | head -10
        
    - name: Check for large binary files
      run: |
        echo "Checking for large binary files..."
        find . -type f -size +10M -not -path './.git/*' | head -10
        
    - name: Line count analysis
      run: |
        echo "Code line count analysis:"
        find . -name "*.js" -o -name "*.java" -o -name "*.py" -o -name "*.rb" -o -name "*.go" -o -name "*.rs" -o -name "*.php" | xargs wc -l | tail -1